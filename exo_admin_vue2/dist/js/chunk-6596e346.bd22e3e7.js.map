{"version":3,"sources":["webpack:///./src/mixins/GroupTree.js","webpack:///./src/services/api/groups.js","webpack:///./src/mixins/showGroupTree.js","webpack:///./src/views/forms/Forms.vue","webpack:///./src/views/forms/parties/FormGroupTree.vue","webpack:///src/views/forms/parties/FormGroupTree.vue","webpack:///./src/views/forms/parties/FormGroupTree.vue?9be5","webpack:///./src/views/forms/parties/FormGroupTree.vue?0576","webpack:///src/views/forms/Forms.vue","webpack:///./src/views/forms/Forms.vue?5460","webpack:///./src/views/forms/Forms.vue?9857"],"names":["methods","selectByRoute","params","_this","this","$nextTick","tree","$refs","xtree","selected","length","nodes","find","id","$route","query","parent","selectAndExpand","deleteGroup","config","Api","post","apply","concat","Array","prototype","slice","call","arguments","getGroup","saveGroup","getGroupTree","removeRelation","addRelation","computed","showGroupTree","$store","getters","meta","hideTreeInPopup","render","_vm","_c","_self","scopedSlots","_u","key","fn","staticClass","proxy","staticRenderFns","ref","attrs","groupsTree","treeOptions","on","onAdd","onEdit","onDelete","onClick","name","mixins","GroupTree","data","group_type","customNodeEdit","propertyNames","text","children","watch","to","from","mounted","loadTree","exoEventBus","$on","groups","then","group_name","group_id","state","type","node","select","$router","push","R_FORMGROUP_EDIT","group_parent","_this2","$dialogs","confirmDelete","title","message","response","trigger","R_FORMS_TABLE","waiter","wait","form_id","component","components","FormGroupTree"],"mappings":"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","file":"js/chunk-6596e346.bd22e3e7.js","sourcesContent":["export default {\n    methods: {\n        selectByRoute(params) {\n            this.$nextTick(() => {\n                let tree = this.$refs.xtree.tree\n                if (tree.selected().length > 0) return\n                let nodes = tree.find({\n                    id: +this.$route.params[params.id]\n                })\n\n                if (!nodes || nodes.length === 0) {\n                    nodes = tree.find({\n                        id: +this.$route.query[params.parent]\n                    })\n                }\n\n                if (!nodes || nodes.length === 0) {\n                    nodes = tree.find({\n                        id: '0'\n                    })\n                }\n\n                if (nodes && nodes.length > 0) {\n                    this.$refs.xtree.selectAndExpand(nodes[0])\n                }\n            })\n        }\n    }\n}\n","import Api from \"@/services/api/Api\"\n\nexport default {\n\n    deleteGroup(params, config) {\n        return Api.post('/groups/deleteGroup', ...arguments)\n    },\n\n    getGroup(params, config) {\n        return Api.post('/groups/getGroup', ...arguments)\n    },\n\n    saveGroup(params, config) {\n        return Api.post('/groups/saveGroup', ...arguments)\n    },\n\n    getGroupTree(params, config) {\n        return Api.post('/groups/getGroupTree', ...arguments)\n    },\n    removeRelation(params, config) {\n        return Api.post('/groups/removeRelation', ...arguments)\n    },\n\n    addRelation(params, config) {\n        return Api.post('/groups/addRelation', ...arguments)\n    },\n\n\n}\n","export default {\n    computed: {\n        showGroupTree() {\n            return !(this.$store.getters['app/screenMode'] === 'POPUP' && this.$route.meta.hideTreeInPopup)\n        }\n    },\n}\n","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('app-screen',{scopedSlots:_vm._u([(_vm.showGroupTree)?{key:\"aside\",fn:function(){return [_c('form-group-tree',{staticClass:\"mt-3\"})]},proxy:true}:null],null,true)})\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('waiter',{ref:\"waiter\"},[_c('x-tree',{ref:\"xtree\",attrs:{\"data\":_vm.groupsTree,\"options\":_vm.treeOptions},on:{\"add\":_vm.onAdd,\"edit\":_vm.onEdit,\"delete\":_vm.onDelete,\"click\":_vm.onClick}})],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <waiter ref=\"waiter\">\n        <x-tree\n            ref=\"xtree\"\n            :data=\"groupsTree\"\n            :options=\"treeOptions\"\n            @add=\"onAdd\"\n            @edit=\"onEdit\"\n            @delete=\"onDelete\"\n            @click=\"onClick\">\n        </x-tree>\n    </waiter>\n</template>\n\n<script>\nimport groups from '@/services/api/groups'\nimport {R_FORMGROUP_EDIT, R_FORMS_TABLE} from \"@/router/routs\"\nimport GroupTree from '@/mixins/GroupTree'\n\n//todo Create statafull component for groups tree\nexport default {\n    name: \"FormGroupTree\",\n    mixins: [GroupTree],\n    data() {\n        return {\n            group_type: 'form',\n            groupsTree: [],\n            treeOptions: {\n                customNodeEdit: true,\n                propertyNames: {\n                    text: 'group_name',\n                    children: 'children',\n                    id: 'group_id'\n                }\n            },\n        }\n    },\n    watch: {\n        '$route'(to, from) {\n            this.selectByRoute({id: 'group_id', parent: 'group_parent'})\n        }\n    },\n    mounted() {\n        this.loadTree();\n        exoEventBus.$on('exo-api-call:groups/saveGroup', this.loadTree)\n    },\n    methods: {\n        loadTree() {\n            groups.getGroupTree({group_type: this.group_type})\n                .then(data => {\n                    this.groupsTree = [{\n                        group_name: 'All Forms',\n                        children: data,\n                        group_id: '0',\n                        state: {\n                            \"selected\": false,\n                            \"selectable\": true,\n                            \"checked\": false,\n                            \"expanded\": true,\n                            \"indeterminate\": false,\n                            \"matched\": false,\n                            \"editable\": false,\n                            \"deleteble\": false,\n                            \"append\": true,\n                            \"dragging\": false,\n                            \"draggable\": false,\n                            \"dropable\": true\n                        },\n                        data: {\n                            type: 'root'\n                        }\n                    }]\n                })\n                .then(() => {\n                    this.selectByRoute({id: 'group_id', parent: 'group_parent'})\n                })\n        },\n        onAdd(node) {\n            node.select()\n            this.$router.push({\n                name: R_FORMGROUP_EDIT, params: {group_id: 'new'}, query: {group_parent: node.id}\n            })\n        },\n        onEdit(node) {\n            node.select()\n            this.$router.push({name: R_FORMGROUP_EDIT, params: {group_id: node.id}})\n        },\n        onDelete(node) {\n            this.$dialogs.confirmDelete({\n                title: 'Delete Node',\n                message: `Are you sure want to delete group \"${node.data.text}\"?`\n            }).then(response => {\n                if (response.trigger === 'ok') {\n                    //go up if current group selected\n                    if (this.$route.params.group_id === node.id) {\n                        this.$router.push({name: R_FORMS_TABLE, params: {group_id: node.parent.id}})\n                    }\n                    this.$refs.waiter.wait(groups.deleteGroup({\n                        group_id: node.id,\n                        group_type: this.group_type\n                    }).then(this.loadTree))\n                }\n            })\n        },\n        onClick(node) {\n            this.$router.push({\n                name: R_FORMS_TABLE, params: {group_id: node.id, form_id: ''}\n            })\n        },\n    },\n}\n</script>\n\n<style scoped>\n\n</style>\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FormGroupTree.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FormGroupTree.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./FormGroupTree.vue?vue&type=template&id=32435848&scoped=true\"\nimport script from \"./FormGroupTree.vue?vue&type=script&lang=js\"\nexport * from \"./FormGroupTree.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"32435848\",\n  null\n  \n)\n\nexport default component.exports","<template>\n    <app-screen>\n        <template #aside v-if=\"showGroupTree\">\n            <form-group-tree class=\"mt-3\"></form-group-tree>\n        </template>\n    </app-screen>\n</template>\n\n<script>\nimport FormGroupTree from './parties/FormGroupTree'\nimport showGroupTree from '@/mixins/showGroupTree'\n\nexport default {\n    name: \"Forms\",\n    mixins: [showGroupTree],\n    components: {\n        FormGroupTree\n    }\n}\n</script>\n\n<style scoped>\n\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Forms.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Forms.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./Forms.vue?vue&type=template&id=eb54889e&scoped=true\"\nimport script from \"./Forms.vue?vue&type=script&lang=js\"\nexport * from \"./Forms.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"eb54889e\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}