{"version":3,"sources":["webpack:///./src/views/reacts/ReactsTable.vue","webpack:///src/views/reacts/ReactsTable.vue","webpack:///./src/views/reacts/ReactsTable.vue?45b1","webpack:///./src/views/reacts/ReactsTable.vue?51dd"],"names":["render","_vm","this","_c","_self","staticClass","ref","attrs","forms","filter","scopedSlots","_u","key","fn","$route","params","backRoute","_e","proxy","staticRenderFns","name","components","ReactDataTable","data","computed","_this","reduce","field","query","console","log","route_query","constructed_filter","has_react_user_id","react_user_id","has_react_user_email","react_user_email","Array","isArray","map","item","form_id","isEmpty","watch","handler","newQuery","oldQuery","_this2","old","new","$refs","table","$nextTick","refresh","deep","immediate","activated","methods","component"],"mappings":"uHAAA,IAAIA,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,aAAa,CAACA,EAAG,MAAM,CAACE,YAAY,gBAAgB,CAACF,EAAG,SAAS,CAACG,IAAI,UAAU,CAACH,EAAG,mBAAmB,CAACG,IAAI,QAAQC,MAAM,CAAC,KAAO,kBAAkB,cAAa,EAAK,MAAQN,EAAIO,MAAM,kBAAiB,EAAK,OAASP,EAAIQ,OAAO,gBAAe,EAAM,eAA0B,IAAZR,EAAIO,MAAa,iBAAgB,GAAME,YAAYT,EAAIU,GAAG,CAAC,CAACC,IAAI,gBAAgBC,GAAG,WAAW,MAAO,CAAEZ,EAAIa,OAAOC,OAAOC,UAAWb,EAAG,eAAeF,EAAIgB,OAAOC,OAAM,QAAW,IAAI,MAE7fC,EAAkB,G,wBC0BP,GACfC,KAAA,cACAC,WAAA,CAAAC,uBACAC,KAAA,WACA,UAEAC,SAAA,CACAf,OAAA,eAAAgB,EAAA,KACAhB,EAAA,gFACAiB,QAAA,SAAAjB,EAAAkB,GAIA,OAHAF,EAAAX,OAAAc,MAAAD,KACAlB,EAAAkB,GAAAF,EAAAX,OAAAc,MAAAD,IAEAlB,IACA,IAUA,OAPAoB,QAAAC,IAAA,mCACAC,YAAA,KAAAjB,OAAAc,MACAI,mBAAAvB,EACAwB,oBAAA,KAAAnB,OAAAc,MAAAM,cACAC,uBAAA,KAAArB,OAAAc,MAAAQ,mBAGA3B,GAEAD,MAAA,WACA,YAAAM,OAAAc,MAAApB,OAAA6B,MAAAC,QAAA,KAAAxB,OAAAc,MAAApB,OACA,KAAAM,OAAAc,MAAApB,MAAA+B,KAAA,SAAAC,GACA,OACAC,QAAAD,QAGAE,eAAA,KAAA5B,OAAAc,MAAApB,QACA,EACAiC,QAAA,KAAA3B,OAAAc,MAAApB,UAMAmC,MAAA,CAEA,gBACAC,QAAA,SAAAC,EAAAC,GAAA,IAAAC,EAAA,KACAlB,QAAAC,IAAA,uCACAkB,IAAAF,EACAG,IAAAJ,IAIA,KAAAK,MAAAC,OAAA,KAAAD,MAAAC,MAAAD,MAAAC,OACA,KAAAC,WAAA,WACAL,EAAAG,MAAAC,MAAAD,MAAAC,MAAAE,cAIAC,MAAA,EACAC,WAAA,IAGAC,UAAA,WAEA3B,QAAAC,IAAA,kDAAAhB,OAAAc,OAGA,KAAAsB,MAAAC,OAAA,KAAAD,MAAAC,MAAAD,MAAAC,OACA,KAAAD,MAAAC,MAAAD,MAAAC,MAAAE,WAGAI,QAAA,IClGmW,I,YCO/VC,EAAY,eACd,EACA1D,EACAmB,GACA,EACA,KACA,KACA,MAIa,aAAAuC,E","file":"js/chunk-2d210b9c.688835f6.js","sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('app-screen',[_c('div',{staticClass:\"reacts-table\"},[_c('waiter',{ref:\"waiter\"},[_c('react-data-table',{ref:\"table\",attrs:{\"name\":\"ReactsTableView\",\"save-state\":true,\"forms\":_vm.forms,\"row-click-edit\":true,\"filter\":_vm.filter,\"show-filters\":false,\"show-search\":_vm.forms!==true,\"allow-add-new\":true},scopedSlots:_vm._u([{key:\"beforeActions\",fn:function(){return [(_vm.$route.params.backRoute)?_c('action-back'):_vm._e()]},proxy:true}])})],1)],1)])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <app-screen>\n        <div class=\"reacts-table\">\n            <waiter ref=\"waiter\">\n                <react-data-table\n                    ref=\"table\"\n                    name=\"ReactsTableView\"\n                    :save-state=\"true\"\n                    :forms=\"forms\"\n                    :row-click-edit=\"true\"\n                    :filter=\"filter\"\n                    :show-filters=\"false\"\n                    :show-search=\"forms!==true\"\n                    :allow-add-new=\"true\"\n                >\n                    <template #beforeActions>\n                        <action-back v-if=\"$route.params.backRoute\"></action-back>\n                    </template>\n                </react-data-table>\n            </waiter>\n        </div>\n    </app-screen>\n</template>\n\n<script>\nimport ReactDataTable from '@/components/ReactDataTable/ReactDataTable'\nimport isEmpty from '@modules/isEmpty'\n\nexport default {\n    name: 'ReactsTable',\n    components: {ReactDataTable},\n    data() {\n        return {}\n    },\n    computed: {\n        filter() {\n            const filter = ['react_id', 'react_title', 'react_form_name', 'react_user_email', 'react_user_id']\n                .reduce((filter, field) => {\n                    if (this.$route.query[field]) {\n                        filter[field] = this.$route.query[field]\n                    }\n                    return filter\n                }, {})\n\n            // DEBUG: Log filter construction\n            console.log('üîç ReactsTable filter computed:', {\n                route_query: this.$route.query,\n                constructed_filter: filter,\n                has_react_user_id: !!this.$route.query.react_user_id,\n                has_react_user_email: !!this.$route.query.react_user_email\n            });\n\n            return filter;\n        },\n        forms() {\n            if (this.$route.query.forms && Array.isArray(this.$route.query.forms)) {\n                return this.$route.query.forms.map(item => {\n                    return {\n                        form_id: item\n                    }\n                })\n            } else if (!isEmpty(this.$route.query.forms)) {\n                return [{\n                    form_id: this.$route.query.forms\n                }]\n            }\n            return true\n        }\n    },\n    watch: {\n        // Watch for route query changes and refresh table\n        '$route.query': {\n            handler(newQuery, oldQuery) {\n                console.log('üîç ReactsTable route query changed:', {\n                    old: oldQuery,\n                    new: newQuery\n                });\n\n                // Refresh table when route query changes\n                if (this.$refs.table && this.$refs.table.$refs.table) {\n                    this.$nextTick(() => {\n                        this.$refs.table.$refs.table.refresh();\n                    });\n                }\n            },\n            deep: true,\n            immediate: false\n        }\n    },\n    activated() {\n        // DEBUG: Log route query on activation\n        console.log('üîç ReactsTable activated with route query:', this.$route.query);\n\n        // Force refresh when component is activated with new route params\n        if (this.$refs.table && this.$refs.table.$refs.table) {\n            this.$refs.table.$refs.table.refresh();\n        }\n    },\n    methods: {},\n}\n</script>\n\n<style lang=\"scss\">\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ReactsTable.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ReactsTable.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./ReactsTable.vue?vue&type=template&id=4b1bfd78\"\nimport script from \"./ReactsTable.vue?vue&type=script&lang=js\"\nexport * from \"./ReactsTable.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}